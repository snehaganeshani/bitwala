{
  "service": {
    "service": "serverless-task",
    "serviceObject": {
      "name": "serverless-task"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "python3.7",
      "versionFunctions": false,
      "memorySize": 1024,
      "region": "us-east-1",
      "deploymentBucket": "serverless-bitwala-bucket",
      "role": "arn:aws:iam::600178069412:role/lambda_execution_role",
      "token": "none",
      "deploymentBucketObject": {
        "name": "serverless-bitwala-bucket"
      },
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "GethelloWorldLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-task-dev-gethelloWorld"
            }
          },
          "GethelloWorldLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-bitwala-bucket",
                "S3Key": "serverless/serverless-task/dev/1577214270751-2019-12-24T19:04:30.751Z/serverless-task.zip"
              },
              "FunctionName": "serverless-task-dev-gethelloWorld",
              "Handler": "lambda/helloworld.helloworld",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::600178069412:role/lambda_execution_role",
              "Runtime": "python3.7",
              "Timeout": 6
            },
            "DependsOn": [
              "GethelloWorldLogGroup"
            ]
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-serverless-task",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceHelloworld": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "helloWorld",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodHelloworldGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHelloworld"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GethelloWorldLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1577214268840": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodHelloworldGet"
            ]
          },
          "GethelloWorldLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GethelloWorldLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GethelloWorldSnsSubscriptionLambdaSNS": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": {
                "Ref": "lambdaAlert"
              },
              "Protocol": "lambda",
              "Endpoint": {
                "Fn::GetAtt": [
                  "GethelloWorldLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "GethelloWorldLambdaPermissionLambdaSNSSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GethelloWorldLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "sns.amazonaws.com",
              "SourceArn": {
                "Ref": "lambdaAlert"
              }
            }
          },
          "lambdaAlert": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "TopicName": "LambdaSNS"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-bitwala-bucket"
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-python-requirements",
      "serverless-plugin-existing-s3"
    ],
    "pluginsData": {},
    "functions": {
      "gethelloWorld": {
        "handler": "lambda/helloworld.helloworld",
        "events": [
          {
            "http": {
              "path": "helloWorld",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          },
          {
            "sns": {
              "arn": {
                "Ref": "lambdaAlert"
              },
              "topicName": "LambdaSNS"
            }
          }
        ],
        "name": "serverless-task-dev-gethelloWorld",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "lambdaAlert": {
          "Type": "AWS::SNS::Topic",
          "Properties": {
            "TopicName": "LambdaSNS"
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "artifact": "/home/ubuntu/bitwala/task2/serverless-task/.serverless/serverless-task.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-task/dev/1577214270751-2019-12-24T19:04:30.751Z",
    "artifact": "serverless-task.zip"
  }
}